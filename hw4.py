# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества.
# Затем пользователь вводит сами элементы множеств.

import random

print("Задача 22")
n, m = map(int, input("Введите количество чисел в списках через пробел: ").split())
row1, row2=[],[]
for i in range(n):
    row1.append(random.randint(1,20))
    i+=1
for j in range(m):
    row2.append(random.randint(1,20))
    j+=1

print(*row1)
print(*row2)

unique=set(row1).intersection(set(row2))
if len(unique)==0:
    print(f'В списках нет общих элементов')
else:
    print(f'В обоих списках встречаются числа {unique}')


# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику.
# Она растёт на круглой грядке, причём кусты высажены только по окружности. Таким образом,
# у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод —
# на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей. Собирающий модуль за один заход,
# находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль,
# находясь перед некоторым кустом заданной во входном файле грядки.

print("\nЗадача 24")
number=int(input("Введите количество грядок:  "))
beds=[]
for i in range(number):
    beds.append(random.randint(1,10))
    i+=1
print(beds)

if number<3:
    print(f'Маловато грядок, с них можно собрать {sum(beds)} ягод.')
    exit()

b=0
max=beds[-1]+beds[0]+beds[1]
for k in range(len(beds)):
    if k==len(beds)-1:
        berr=beds[k-1]+beds[k]+beds[0]
    else:
        berr=sum(beds[(k-1):(k+ 2)])
    if berr>max:
        max=berr
        b=k
print(f'Максимальное число ягод с 1 захода составляет {max}. Оно собирается с куста № {b+1} и 2 соседних.')

